{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/browser/browser.component.css","webpack:///./src/app/browser/browser.component.html","webpack:///./src/app/browser/browser.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main-nav-bar/main-nav-bar.component.css","webpack:///./src/app/main-nav-bar/main-nav-bar.component.html","webpack:///./src/app/main-nav-bar/main-nav-bar.component.ts","webpack:///./src/app/modal-basic/modal-basic.component.css","webpack:///./src/app/modal-basic/modal-basic.component.html","webpack:///./src/app/modal-basic/modal-basic.component.ts","webpack:///./src/app/models/card.model.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/app/star-group/star-group.component.css","webpack:///./src/app/star-group/star-group.component.html","webpack:///./src/app/star-group/star-group.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".headline {\\r\\n  margin-top: 100px;\\r\\n}\\r\\n\\r\\n.sky {\\r\\n  height: 1000px;\\r\\n\\r\\n}\\r\\n\\r\\n.sparkle {\\r\\n  -webkit-animation-name: sparkle;\\r\\n          animation-name: sparkle;\\r\\n  -webkit-animation-iteration-count: infinite;\\r\\n          animation-iteration-count: infinite;\\r\\n  -webkit-animation-duration: 1s;\\r\\n          animation-duration: 1s;\\r\\n  -webkit-animation-delay:;\\r\\n          animation-delay:\\r\\n}\\r\\n\\r\\n@-webkit-keyframes sparkle {\\r\\n    20% {\\r\\n      -webkit-transform: scale(0.5);\\r\\n              transform: scale(0.5);\\r\\n      opacity: 0.5;\\r\\n    }\\r\\n  }\\r\\n\\r\\n@keyframes sparkle {\\r\\n    20% {\\r\\n      -webkit-transform: scale(0.5);\\r\\n              transform: scale(0.5);\\r\\n      opacity: 0.5;\\r\\n    }\\r\\n  }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"sky\\\" style=\\\"text-align:center\\\">\\n  <app-star-group [(renderCount)] = \\\"renderCount\\\" ></app-star-group>\\n  <app-main-nav-bar></app-main-nav-bar>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'app';\n  @Output() renderCount = 0;\n\n\n\n  ngOnInit() {\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ModalBasicComponent } from './modal-basic/modal-basic.component';\nimport { MainNavBarComponent } from './main-nav-bar/main-nav-bar.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BrowserComponent } from './browser/browser.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport {NgbModal, NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UsersService } from './services/users.service';\nimport { StarGroupComponent } from './star-group/star-group.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent},\n  { path: 'welcome', component: DashboardComponent },\n  { path: 'sign-up', component: RegisterComponent },\n  { path: 'recent-snapcards', component: BrowserComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    RegisterComponent,\n    ModalBasicComponent,\n    MainNavBarComponent,\n    LoginComponent,\n    DashboardComponent,\n    BrowserComponent,\n    StarGroupComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n    NgbModule.forRoot(),\n    HttpClientModule,\n  ],\n  providers: [UsersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container {\\r\\n  margin-top: 100px;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n\\r\\n  grid-template-columns: repeat(auto-fill, minmax(200px, 200px));\\r\\n  -ms-grid-rows: 250px;\\r\\n      grid-template-rows: 250px;\\r\\n  grid-column-gap: 30px;\\r\\n  grid-row-gap: 30px;\\r\\n}\\r\\n\\r\\n.like {\\r\\n  position: absolute;\\r\\n  left:125px;\\r\\n  top:226px;\\r\\n  padding-bottom: 0px;\\r\\n  margin-bottom: 0px;\\r\\n  cursor: pointer;\\r\\n  color:blue;\\r\\n}\\r\\n\\r\\n.likeThumb {\\r\\n  width: 25px;\\r\\n  position:\\r\\n  absolute;\\r\\n  top:220px;\\r\\n  left:153px;\\r\\n  -webkit-transform: scaleX(-1);\\r\\n          transform: scaleX(-1);color:blue;\\r\\n}\\r\\n\\r\\n.liked {\\r\\n  width:98px;\\r\\n  position:\\r\\n  absolute;\\r\\n  left:85px;\\r\\n  top:228px;\\r\\n  font-size: .75rem;\\r\\n  color:blue;\\r\\n}\\r\\n\\r\\n.likedThumb {\\r\\n  width: 25px;\\r\\n  position:absolute;\\r\\n  top:220px;\\r\\n  left:64px;\\r\\n  -webkit-transform: scaleX(-1);\\r\\n          transform: scaleX(-1);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div>\\n  <div class=\\\"container\\\">\\n    <div *ngFor=\\\"let card of recentUserCards; let num = index\\\">\\n      <div *ngIf=\\\"card.isPublic\\\" class=\\\"card\\\" style=\\\"width: 13rem; min-height: 250px\\\">\\n        <img *ngIf=\\\"card.imageLink\\\" class=\\\"card-img-top\\\" style=\\\"max-height:150px; max-width:150px; margin: 10px auto\\\" src=\\\"{{card.imageLink}}\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\" style=\\\"padding-bottom: 7px;\\\">\\n          <h5 class=\\\"card-title\\\">{{card.title}}</h5>\\n          <div *ngIf=\\\"!getLikes(card.id)\\\">\\n            <p class=\\\"like\\\" (click)=\\\"likeSnapCard(card.id, num)\\\">Like\\n            </p>\\n            <img class=\\\"likeThumb\\\" src=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/svgs/fi-like.svg\\\" alt=\\\"likeThumb\\\" >\\n          </div>\\n          <div *ngIf=\\\"getLikes(card.id)\\\">\\n            <p class=\\\"liked\\\">You Liked This\\n            </p>\\n            <img class=\\\"likedThumb\\\" src=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/svgs/fi-like.svg\\\" alt=\\\"likeThumb\\\" >\\n          </div>\\n          <p class=\\\"card-text like\\\" style=\\\"position: absolute; left:181px; bottom:6px; font-weight: bold\\\">{{card.likes}}</p>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Card } from '../models/card.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-browser',\n  templateUrl: './browser.component.html',\n  styleUrls: ['./browser.component.css']\n})\nexport class BrowserComponent implements OnInit {\n  recentUserCards:Array<Card>;\n\n  constructor(private usersService:UsersService, private http:HttpClient) { }\n\n  ngOnInit() {\n    this.usersService.recentCards.subscribe((newcards) => {\n      //this.recentUserCards = newcards;\n    });\n    this.usersService.getAllCards();\n  }\n\n  getLikes(id) {\n    console.log('this.usersService.likedCards', this.usersService.likedCards);\n    return this.usersService.likedCards.includes(id);\n  }\n\n  likeSnapCard(id, index) {\n    const token = localStorage.getItem('token');\n\n    this.http\n      .post('like-snapcard', JSON.stringify({\n        id,\n        email: this.usersService.currentEmail,\n      }), {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-access-token': token\n      })\n      }).subscribe(data => {\n        if (data) {\n         // this.recentUserCards[index].likes = data.card.likes; //temp\n          this.usersService.likeCard(id);\n        }\n\n      });\n  }\n\n}\n","module.exports = \".fields {\\r\\n  margin:10px auto;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  margin-top: 100px;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n\\r\\n  grid-template-columns: repeat(auto-fill, minmax(200px, 200px));\\r\\n  -ms-grid-rows: 250px;\\r\\n      grid-template-rows: 250px;\\r\\n  grid-column-gap: 30px;\\r\\n  grid-row-gap: 30px;\\r\\n}\\r\\n\\r\\n.card-title {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.headline {\\r\\n  margin-top: 70px;\\r\\n  color:white;\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n}\\r\\n\\r\\n/* The switch - the box around the slider */\\r\\n\\r\\n.switch {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  width: 60px;\\r\\n  height: 34px;\\r\\n}\\r\\n\\r\\n/* Hide default HTML checkbox */\\r\\n\\r\\n.switch input {display:none;}\\r\\n\\r\\n/* The slider */\\r\\n\\r\\n.slider {\\r\\n  position: absolute;\\r\\n  cursor: pointer;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  background-color: #ccc; /* gray background */\\r\\n  transition: .4s; /* lenght of animation */\\r\\n}\\r\\n\\r\\n.slider:before {\\r\\n  position: absolute;\\r\\n  content: \\\"\\\";\\r\\n  height: 26px;\\r\\n  width: 26px;\\r\\n  left: 4px;\\r\\n  bottom: 4px;\\r\\n  background-color: white;\\r\\n  transition: .4s;\\r\\n}\\r\\n\\r\\n/* if input is checked then slider background color changed to blue via slider class*/\\r\\n\\r\\ninput:checked + .slider {\\r\\n  background-color: #007bff;\\r\\n}\\r\\n\\r\\ninput:focus + .slider {\\r\\n  box-shadow: 0 0 1px #007bff;\\r\\n}\\r\\n\\r\\n/* if input is checked then move object with slider class 26px to right*/\\r\\n\\r\\ninput:checked + .slider:before {\\r\\n  -webkit-transform: translateX(26px);\\r\\n  transform: translateX(26px);\\r\\n}\\r\\n\\r\\n/* Rounded sliders */\\r\\n\\r\\n.slider.round {\\r\\n  border-radius: 34px;\\r\\n}\\r\\n\\r\\n.slider.round:before {\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n.toggle {\\r\\n  -webkit-transform: scale(.7);\\r\\n          transform: scale(.7);\\r\\n  position: absolute;\\r\\n  top: 210px;\\r\\n  left: -5px;\\r\\n}\\r\\n\\r\\n.public {\\r\\n  left:75px;\\r\\n  position: absolute;\\r\\n  font-size: 1.25rem;\\r\\n  top:8px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.like {\\r\\n  position: absolute;\\r\\n  left:147px;\\r\\n  top:226px;\\r\\n  padding-bottom: 0px;\\r\\n  margin-bottom: 0px;\\r\\n  color:blue;\\r\\n}\\r\\n\\r\\n.likeThumb {\\r\\n  width: 25px;\\r\\n  position:\\r\\n  absolute;\\r\\n  top:220px;\\r\\n  left:152px;\\r\\n  -webkit-transform: scaleX(-1);\\r\\n          transform: scaleX(-1);color:blue;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n      <h1 class=\\\"headline\\\">Welcome</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"container\\\">\\n    <div *ngFor=\\\"let card of currentUserCards; let num=index\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 13rem; min-height: 250px; max-height: 250px; margin: 10px; float: left;\\\">\\n        <img *ngIf=\\\"card.imageLink\\\" class=\\\"card-img-top\\\" style=\\\"max-height:150px; max-width:150px; margin: 10px auto\\\"src=\\\"{{card.imageLink}}\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{card.title}}</h5>\\n          <div class=\\\"toggle\\\">\\n            <label class=\\\"switch\\\">\\n              <input type=\\\"checkbox\\\" [checked]=\\\"card.isPublic\\\" (click)=\\\"setPublic(card.id,num)\\\">\\n              <span class=\\\"slider round\\\"></span>\\n            </label>\\n            <span class=\\\"public\\\">Public</span>\\n          </div>\\n          <img class=\\\"likeThumb\\\" src=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/svgs/fi-like.svg\\\" alt=\\\"star\\\" >\\n          <p class=\\\"card-text like\\\" style=\\\"position: absolute; left:181px; bottom:6px; font-weight: bold\\\">{{card.likes}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <ngbd-modal-basic></ngbd-modal-basic>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Card } from '../models/card.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  currentUser: string;\n  currentUserCards: Array<Card>;\n\n\n  constructor(private usersService: UsersService) {\n\n  }\n\n  ngOnInit() {\n    this.currentUser = this.usersService.getCurrentUser();\n    this.currentUserCards = this.usersService.getUserCards();\n  }\n\n  setPublic(id:string, index: number) {\n    this.usersService.toggleCardPublic(id);\n    this.currentUserCards[index].isPublic = !this.currentUserCards[index].isPublic;\n  }\n}\n","module.exports = \".fields {\\r\\n  margin:10px auto;\\r\\n  width: 20%;\\r\\n\\r\\n}\\r\\n\\r\\n.error {\\r\\n  margin: auto;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.button {\\r\\n  background-color: palevioletred;\\r\\n  border-color: palevioletred;\\r\\n  color:white;\\r\\n}\\r\\n\\r\\n.inputContainer:nth-child(1) {\\r\\n  margin-top: 100px\\r\\n}\\r\\n\\r\\n.headline {\\r\\n  margin-top: 20px;\\r\\n  font-size: 150px;\\r\\n  color:white;\\r\\n  font-family: 'Dancing Script', cursive;\\r\\n}\\r\\n\\r\\n.sub-headline {\\r\\n  color:violet;\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n  text-shadow: 1px 1px 22px palevioletred;\\r\\n}\\r\\n\\r\\n.buttons {\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"sky\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n      <h1 class=\\\"headline\\\">Sparkle</h1>\\n      <h2 class=\\\"sub-headline\\\">Save The Pics You Love</h2>\\n    </div>\\n  </div>\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 inputContainer\\\">\\n        <input class=\\\"fields form-control\\\" type=\\\"text\\\" placeholder=\\\"email\\\" formControlName=\\\"email\\\" />\\n      </div>\\n      <p class=\\\"error\\\" *ngIf=\\\"!loginForm.get('email').valid && loginForm.get('email').touched\\\" >Please enter email to login</p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n        <input class=\\\"fields form-control\\\" type=\\\"password\\\" placeholder=\\\"password\\\"\\n        formControlName=\\\"password\\\" />\\n      </div>\\n      <p class=\\\"error\\\" *ngIf=\\\"!loginForm.get('password').valid && loginForm.get('password').touched\\\">Please enter password to login</p>\\n    </div>\\n    <div class=\\\"row buttons\\\">\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n        <button class=\\\"btn button\\\">Log In</button>\\n\\n      </div>\\n      <p class=\\\"error\\\" style=\\\"margin-top:20px\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage.error}}</p>\\n    </div>\\n  </form>\\n  <div class=\\\"row buttons\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n      <a [routerLink]= \\\"['/sign-up']\\\">\\n        <button class=\\\"btn button\\\">\\n          Sign Up\\n        </button>\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from '../services/users.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm:FormGroup;\n  errorMessage:Object;\n\n  constructor(private userService:UsersService, private zone: NgZone) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n    });\n  }\n\n  ngOnInit() {\n    this.errorMessage = this.userService.getErrorMessage();\n  }\n\n  onSubmit() {\n    this.userService.loginUser(this.loginForm.value);\n  }\n}\n","module.exports = \".mainNav {\\r\\n  background-color: #9c1d8d;\\r\\n}\\r\\n\\r\\n.nav-text {\\r\\n  color: white;\\r\\n  cursor:pointer;\\r\\n}\"","module.exports = \"<nav *ngIf=\\\"loggedIn\\\" class=\\\"navbar navbar-expand-md\\\">\\n    <div class=\\\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\">\\n                <a [routerLink]= \\\"['/welcome']\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Home</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a [routerLink]= \\\"['/recent-snapcards']\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Recent SnapCards</a>\\n            </li>\\n        </ul>\\n    </div>\\n    <div class=\\\"navbar-collapse collapse w-100 order-3 dual-collapse2\\\">\\n        <ul class=\\\"navbar-nav ml-auto nav-text\\\">\\n            <li class=\\\"nav-item\\\" (click)=\\\"logOut()\\\">\\n                <a class=\\\"nav-link\\\">Logout</a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-main-nav-bar',\n  templateUrl: './main-nav-bar.component.html',\n  styleUrls: ['./main-nav-bar.component.css']\n})\nexport class MainNavBarComponent implements OnInit {\n  loggedIn:Boolean;\n\n  constructor(private usersService:UsersService) { }\n\n  ngOnInit() {\n    this.usersService.loggedIn.subscribe(value => {\n      this.loggedIn = value;\n    });\n  }\n\n  logOut() {\n    this.usersService.logOut();\n  }\n}\n","module.exports = \".fields {\\r\\n  margin:10px auto;\\r\\n}\\r\\n\\r\\n.add-button {\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\"","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">New Snap Card</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup] = \\\"cardForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n          <input\\n            [ngStyle]=\\\"{'margin':'10px auto'}\\\"\\n            class=\\\"fields form-control\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"title\\\"\\n            formControlName=\\\"title\\\"\\n          >\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n          <input\\n            [ngStyle]=\\\"{'margin':'10px auto'}\\\"\\n            class=\\\"fields form-control\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"link to picture\\\"\\n            formControlName=\\\"imageLink\\\"\\n          >\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n          <textarea\\n            [ngStyle]=\\\"{'margin':'10px auto'}\\\"\\n            class=\\\"fields form-control\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"Enter description here\\\"\\n            formControlName=\\\"description\\\"\\n          >\\n          </textarea>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onSubmit(); c('Close click')\\\">Add</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"row\\\" style=\\\"float:left;\\\">\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 offset-md-5 offset-sm-5\\\">\\n    <button class=\\\"btn btn-lg btn-outline-primary add-button\\\" [ngStyle]=\\\"{'height':'10rem'}\\\" (click)=\\\"open(content)\\\"> + Add New Snap Card</button>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'ngbd-modal-basic',\n  templateUrl: './modal-basic.component.html',\n  styleUrls: ['./modal-basic.component.css']\n})\nexport class ModalBasicComponent implements OnInit  {\n  closeResult: string;\n  cardForm: FormGroup;\n\n  constructor(private modalService: NgbModal, private usersService: UsersService) {}\n\n  ngOnInit() {\n    this.cardForm = new FormGroup({\n      title: new FormControl(null),\n      description: new FormControl(null),\n      imageLink: new FormControl(null)\n    });\n  }\n\n  open(content) {\n    this.modalService.open(content);\n  }\n\n  onSubmit() {\n    this.usersService.addNewCard(this.cardForm.value);\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}","export class Card {\r\n  title:string;\r\n  imageLink:string;\r\n  description: string;\r\n  likes: number;\r\n  id:string;\r\n  isPublic: boolean;\r\n\r\n  constructor(title:string, imageLink:string, description:string, likes:number, id:string, isPublic:boolean=false) {\r\n    this.title = title;\r\n    this.imageLink = imageLink;\r\n    this.description = description;\r\n    this.likes = likes;\r\n    this.id = id;\r\n    this.isPublic = isPublic;\r\n  }\r\n}","module.exports = \".fields {\\r\\n  margin:10px auto;\\r\\n\\r\\n}\\r\\n\\r\\n.button {\\r\\n  background-color: palevioletred;\\r\\n  border-color: palevioletred;\\r\\n  color:white;\\r\\n  margin-top:20px;\\r\\n}\\r\\n\\r\\n.headline {\\r\\n  padding-top: 50px;\\r\\n  margin-bottom: 50px;\\r\\n  color:white;\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n}\"","module.exports = \"<div class=\\\"col-xs-8 col-sm-8 col-md-8 col-lg-8 offset-xs-2 offset-md-2 offset-lg-2 offset-sm-2\\\">\\n  <h1 class=\\\"headline\\\"> Create an Account </h1>\\n  <form [formGroup] = \\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n        <input\\n          class=\\\"fields form-control\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"name\\\"\\n          formControlName=\\\"username\\\"\\n        >\\n      </div>\\n      <p style=\\\"margin-left: 20px\\\" *ngIf=\\\"!registerForm.get('username').valid && registerForm.get('username').touched\\\">Please enter a username.\\n      </p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n        <input\\n          class=\\\"fields form-control\\\"\\n          type=\\\"password\\\"\\n          placeholder=\\\"password\\\"\\n          formControlName=\\\"password\\\"\\n        >\\n      </div>\\n      <p style=\\\"margin-left: 20px\\\" *ngIf=\\\"!registerForm.get('password').valid && registerForm.get('password').touched\\\">\\n        Please enter a password.\\n      </p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n        <input\\n          class=\\\"fields form-control\\\"\\n          type=\\\"email\\\"\\n          placeholder=\\\"email\\\"\\n          email\\n          formControlName=\\\"email\\\"\\n        >\\n      </div>\\n      <p style=\\\"margin-left: 20px\\\" *ngIf=\\\"!registerForm.get('email').valid && registerForm.get('email').touched\\\">\\n        Please enter a valid email.\\n      </p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-6 col-sm-6 col-md-6 col-lg-6\\\">\\n        <input\\n          class=\\\"fields form-control\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"city\\\"\\n          formControlName=\\\"city\\\"\\n        >\\n        <p style=\\\"float:left\\\" *ngIf=\\\"!registerForm.get('city').valid && registerForm.get('city').touched\\\"> Please enter a city.\\n        </p>\\n      </div>\\n      <div class=\\\"col-xs-6 col-sm-6 col-md-6 col-lg-6\\\">\\n        <input\\n          class=\\\"fields form-control\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"state\\\"\\n          formControlName=\\\"state\\\"\\n        >\\n        <p style=\\\"float:left\\\" *ngIf=\\\"!registerForm.get('state').valid && registerForm.get('state').touched\\\" >\\n          Please select a state.\\n        </p>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n        <button class=\\\"btn button\\\">Sign Up</button>\\n      </div>\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n        <button (click)=\\\"backToLogin()\\\" class=\\\"btn button\\\">Back to Login</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from './user.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm:FormGroup;\n\n  constructor(private usersService:UsersService, private router:Router) { }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      email: new FormControl(null, Validators.required),\n      city: new FormControl(null, Validators.required),\n      state: new FormControl(null, Validators.required),\n    })\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.usersService.addNewUser(this.registerForm.value);\n      this.router.navigateByUrl('/');\n    } else {\n      console.log('invalid form');\n    }\n\n  }\n\n  backToLogin() {\n    this.router.navigateByUrl('/');\n  }\n}\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Card } from '../models/card.model';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n  currentUser: string;\r\n  currentEmail: string;\r\n  errorMessage = {error:''};\r\n  loggedIn:Subject<boolean> = new Subject<boolean>();\r\n  userCards:Array<Card> = [];\r\n  likedCards:Array<string> = [];\r\n  recentCards:Subject<Array<any>> = new Subject<Array<any>>();\r\n  stars = 0;\r\n\r\n  constructor(private http:HttpClient, private router:Router) {\r\n\r\n  }\r\n\r\n  getErrorMessage():Object {\r\n    return this.errorMessage;\r\n  }\r\n\r\n  getCurrentUser():string {\r\n    return this.currentUser;\r\n  }\r\n\r\n  setCurrentUser(user:string):void {\r\n    this.currentUser = user;\r\n\r\n  }\r\n\r\n  getRecentCards():Observable<Array<String>> {\r\n    return this.recentCards;\r\n  }\r\n\r\n  getStars() {\r\n    return this.stars;\r\n  }\r\n\r\n  addStars() {\r\n    this.stars = this.stars + 1;\r\n  }\r\n\r\n  logOut() {\r\n    this.loggedIn.next(false);\r\n    this.router.navigateByUrl('/');\r\n  }\r\n  getUserCards():Array<Card> {\r\n    return this.userCards;\r\n  }\r\n\r\n  loginUser(user):void {\r\n    const {email, password} = user;\r\n    this.http\r\n      .post('login', JSON.stringify({\r\n        username: email,\r\n        password,\r\n      }), {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json'\r\n        })\r\n      }).subscribe((result:any) => {\r\n        if (result.user) {\r\n          const { token } = result;\r\n          const { username, email, cards, cardsLiked } = result.user;\r\n          const cardModels = [];\r\n\r\n          cards.map(card => {\r\n            cardModels.push(new Card(card.title, card.imagelink, card.description, card.likes, card.id, card.isPublic));\r\n          });\r\n\r\n          localStorage.setItem('token', token); // JWT token\r\n          this.loggedIn.next(true);\r\n          this.currentUser = username;\r\n          this.currentEmail = email;\r\n          this.userCards = cardModels;\r\n          this.likedCards = cardsLiked || [];\r\n          this.router.navigateByUrl('/welcome');\r\n        } else {\r\n          //invalid username or password\r\n          this.errorMessage.error = result.error;\r\n        }\r\n      });\r\n  }\r\n\r\n  addNewCard(card):void {\r\n     const { title, description, imageLink } = card;\r\n     const token = localStorage.getItem('token');\r\n     this.http\r\n       .post('/add-card', JSON.stringify({\r\n          imageLink,\r\n          title,\r\n          owner: this.currentEmail,\r\n          description\r\n       }), {\r\n          headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': token\r\n          })\r\n        }).subscribe((data:any) => {\r\n            const { title, description, imageLink, id } = data;\r\n            this.userCards.push(new Card(title, imageLink, description, 0, id));\r\n        });\r\n  }\r\n\r\n  likeCard(id:string):void {\r\n    this.likedCards.push(id);\r\n  }\r\n\r\n  addNewUser(user:any):void {\r\n    const {username, password, email, state, city } = user;\r\n    this.http\r\n        .post('/add-user', JSON.stringify({\r\n          username,\r\n          password,\r\n          state,\r\n          city,\r\n          email,\r\n        }), {\r\n          headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n          })\r\n        }).subscribe((data:any) => {\r\n            const { username, email, state, city, password, token } = data;\r\n            localStorage.setItem('token', token); // JWT token\r\n            this.currentUser = username;\r\n        });\r\n  }\r\n\r\n  // get recent cards from all users\r\n  getAllCards():void {\r\n    const token = localStorage.getItem('token');\r\n    this.http\r\n      .get(`/recent-cards/${this.currentEmail}`, {\r\n        headers: new HttpHeaders({\r\n          'x-access-token': token })\r\n      }).subscribe((returnedCards:any) => {\r\n        const allCards:Array<Card> = [];\r\n\r\n        returnedCards.all.map(card => {\r\n          allCards.push(new Card(card.title, card.imagelink, card.description, card.likes, card.id, card.ispublic));\r\n        });\r\n        this.recentCards.next(allCards);\r\n      });\r\n  }\r\n\r\n  toggleCardPublic(id:string) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    this.http\r\n      .post('/toggle-card-public', JSON.stringify({\r\n          id\r\n        }), {\r\n          headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': token\r\n          })\r\n        }).subscribe((data:any) => {\r\n            const { isPublic } = data;\r\n            console.log('this.recentCards', this.recentCards);\r\n            console.log('typeof this.recentCards', typeof this.recentCards);\r\n            /*\r\n            const updatedCards = this.recentCards.map(card => {\r\n              if (card.is === id) {\r\n                card.isPublic = isPublic;\r\n              }\r\n            });\r\n            this.recentCards = updatedCards;*/\r\n        });\r\n  }\r\n}","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let star of stars;let num = index\\\">\\n    <img src=\\\"../../assets/star.svg\\\" [ngStyle]=\\\"getRandomStar()\\\">\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UsersService } from '../services/users.service';\n\n\n@Component({\n  selector: 'app-star-group',\n  templateUrl: './star-group.component.html',\n  styleUrls: ['./star-group.component.css']\n})\nexport class StarGroupComponent implements OnInit {\n  stars: Array<any> =[];\n  hasCreatedStars: boolean = false;\n  starStyles:Array<any> =[];\n  @Input() renderCount;\n\n  constructor(private usersService: UsersService) {\n    this.stars.length = 1;\n    this.starStyles.length = 1;\n  }\n\n  ngOnInit() {\n  }\n\n   getRandomStar() {\n   // if (this.usersService.getStars() < 1) {\n      this.hasCreatedStars = true;\n      this.usersService.addStars();\n\n      const star = {\n        position: 'absolute',\n        width: (Math.floor(Math.random() * 20) + 10) + 'px',\n        left : Math.floor(Math.random() * 100) + '%',\n        top : Math.floor(Math.random() * 70) + '%',\n        'animation-name': 'sparkle',\n        'animation-iteration-count': 'infinite',\n        'animation-duration': '1s',\n        'animation-delay': (Math.random() * 1) + 's',\n      };\n      this.starStyles.push(star);\n      return star;\n   // }\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  user works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}